package $packageName;

import org.opensaga.runtime.model.domain.DomainObject;
import org.opensaga.runtime.model.meta.DomainTypeMetaProperty;
import org.opensaga.runtime.model.meta.AbstractMetaModelDomainType;
import org.opensaga.runtime.model.meta.AbstractExternalMetaModelDomainType;
import org.opensaga.runtime.attachment.AttachmentInfo;

import org.opensaga.selenium.domain.*;

import javax.annotation.Generated;

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashMap;
import java.util.Locale;
import java.util.Map;

@SuppressWarnings("unused")
@Generated("$website")
#set ( $domainTypeModel = $model[0] )
public class $namingStrategy.getJavaClassNameForDomainTypeModel($domainTypeModel) 
    extends $superClassName
{

	public String getId()
	{
		return "$domainTypeModel.getId()";
	}
	
		
	public String getName()
	{
		return "$domainTypeModel.getName()";
	}

#foreach($property in $domainTypeModel.getMetaPropertyModels())
	#set ( $typeClassName = $property.getType().getTypeClass() )
 	public final DomainTypeTestMetaProperty<$typeClassName> $namingStrategy.getJavaConstantNameForMetaModel($property) = new DomainTypeTestMetaProperty<$typeClassName>("$property.getId()", "$property.getName()", ${typeClassName}.class);
 	
#end
}